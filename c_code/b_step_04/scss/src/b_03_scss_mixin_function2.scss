// b_03_scss_mixin_function2.scss
/* b_03_scss_mixin_function2.css */

// css 처리 : 구형 브라우저를 위해 px-rem 순서로 모두 표기해 주어야 한다 ----------
.box1-1 {
  width: 320px; height: 640px;
  width: 20rem; height: 40rem;
  border-radius: 10px;
  border-radius: 0.625rem;
  padding: 10px;
  padding: 0.625rem;
  margin: 30px;
  margin: 1.875rem;
}

.box2-1 {
  width: 300px;
  height: 500px; // 500 / 600 * 100
  height: 83.333333vw;
  min-height: 500px;
  min-height: 31.25rem;
  max-height: 700px;
}

// --------------------------------------------------------------------------------

// scss 변환시

// 기능 생성
$root: 16;
$defalutDeviceWidth: 600; // 기본 디바이스 width
// deviceWidth

// 통일된 값 설정을 위해 함수를 생성
@function px($unitVal) {
  @return #{$unitVal} + px;
}
@function rem($unitVal) {
  @return (#{$unitVal} / #{$root}) + rem;
}
@function vw($unitVal, $deviceWidth) {
  @return #{$unitVal / $deviceWidth * 100} + vw;
}

// 단위를 px과 rem 모두 작성해 주는 mixin 생성
@mixin unit($sizeProperty, $unitVal) {
  #{$sizeProperty}: px($unitVal); // px값
  #{$sizeProperty}: rem($unitVal); // rem값
}

// 기준 디바이스 크기를 입력하고 그에 따라 vw 계산기 생성
// 기본 $device를 초기값으로 넣되 잠깐 width를 변경할 일이 있으면 다른 값으로 넣도록!
@mixin vw($sizeProperty, $unitVal, $deviceWidth:$defalutDeviceWidth) { // 프로퍼티값, px값, device width(입력하지 않으면 초기값 들어감)
  #{$sizeProperty} : px($unitVal);
  #{$sizeProperty} : vw($unitVal, $deviceWidth);
  min : {
    #{$sizeProperty} : px($unitVal);
    #{$sizeProperty} : rem($unitVal);
  }
}

// @mixin은 선택자부터 속성명, 값 등 대부분의 기능을 모두 사용 가능. @function보다 큰 개념
// @function은 값만 처리해서 삽입하는 기능. 계산만 쓸 수 있음


// 처리
.box1-2 {
  @include unit(width, 320);
  @include unit(height, 640);
  @include unit(border-radius, 10);
  @include unit(padding, 10);
  @include unit(margin, 30);
}
.box2-2 {
  @include unit(width, 300);
  @include vw(height, 500);
}